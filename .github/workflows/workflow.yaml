# This workfow shows how to build a Docker image, tag and push it to DigitalOcean Container Registry, and
# deploy the application on a DIgitalOcean Kubernetes cluster. For description to the entire worklow, 
# see www.digitalocean.com/docs/kubernetes/how-to/deploy-using-github-actions.

name: Build, push, and deploy

# Controls when the action will run.
on:
  # Triggers the workflow on push request on the main branch for changes in the specified paths.
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'Dockerfile'
      - '.github/workflows/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This workflow contains a single job called "build".
  build:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
    - name: Checkout master
      uses: actions/checkout@main

    # Install doctl.
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    # Save $GITHUB_SHA truncated varian as a ENV variable
    - name: Truncate $GITHUB_SHA and make a docker tag out of it
      run: echo "TAG=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV

    # Verify $TAG as an ENV variable
    - name: Print $TAG 
      run: echo ${{ env.TAG }}
      
    - name: Print String
      run: echo "hello world"
      
    - name: Print Env Variable
      env:
          TEST: 'foo'
      run: echo '${TEST}'
      
    
 
